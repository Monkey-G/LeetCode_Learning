（1）queue<T>容器相关：只能访问 queue<T> 容器适配器的第一个和最后一个元素。只能在容器的末尾添加新元素，只能从头部移除元素。

（2）emplace() 是 C++ 11 标准新增加的成员函数，用于在 vector 容器指定位置之前插入一个新的元素。

（3）bfs是用来搜索最短径路的解是比较合适的，比如求最少步数的解，最少交换次数的解，因为bfs搜索过程中遇到的解一定是离最初位置最近的，所以遇到一个解，
一定就是最优解，此时搜索算法可以终止；而如果用dfs，会搜一些其他的位置，需要搜很多次，然后还要一个东西来记录这次找的位置，之后找到的还要和这次找到的进行比较，这样就比较麻烦。

（4）dfs适合搜索全部的解，因为要搜索全部的解，在记录路径的时候也会简单一点，而bfs搜索过程中，遇到离根最近的解，并没有什么用，也必须遍历完整棵搜索树。

（5）dfs是舍弃时间换取空间，bfs是舍去空间换取时间。因为dfs要走很多的路径，可能都是没用的，（做有些题目的时候要进行剪枝，就是确定不符合条件的就可以推出，以免浪费时间，
否则有些题目会TLE）；而bfs可以走的点要存起来，需要队列，因此需要空间来储存，但是快一点。

（6）在这题里边，我们是需要找出其中一个岛的所有坐标的，找岛适宜使用DFS；而找其与另一个岛的距离本质上是最短路径问题，适宜使用BFS。所以我们可以先通过 DFS ，
将其中一个岛屿的所有点找出来，放到一个队列 q 中。然后通过 BFS 一层层向外扩展，直至碰到另一个岛屿，此时将当前扩展的层数作为答案返回即可。
